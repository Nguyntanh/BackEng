@model IEnumerable<Product>

@{
    ViewData["Title"] = "Product List";
}

<h2>@ViewData["Title"]</h2>

<!-- Search Form -->
<div class="row mb-3">
    <div class="col-md-6">
        <form method="get" asp-action="Index" class="row g-3">
            <div class="col-md-4">
                <label for="searchBy" class="form-label">Search By</label>
                <select id="searchBy" name="searchBy" class="form-select">
                    @foreach (var option in new[] { "ProductID", "Name", "Price", "Category" })
                    {
                        <option value="@option"
                                selected="@(ViewData["SearchBy"]?.ToString() == option)">@option</option>
                    }
                </select>
            </div>

            <div class="col-md-6">
                <label for="searchTerm" class="form-label">Search Term</label>
                <input type="text" id="searchTerm" name="searchTerm"
                       class="form-control @(ViewData["SearchTermError"] != null ? "is-invalid" : "")"
                       value="@(ViewData["SearchTerm"]?.ToString())"
                       required />
                @if (ViewData["SearchTermError"] != null)
                {
                    <div class="invalid-feedback">
                        @ViewData["SearchTermError"]
                    </div>
                }
            </div>

            <div class="col-md-2 d-flex align-items-end gap-2">
                <button type="submit" class="btn btn-primary w-100">Search</button>
                <a asp-action="Create" class="btn btn-secondary">Create</a>
            </div>
        </form>
    </div>
</div>


<!-- Product List -->
<div class="table-responsive">
    <table class="table table-striped table-hover mt-3">
        <thead class="table-dark">
            <tr>
                <th scope="col">ProductID</th>
                <th scope="col">Name</th>
                <th scope="col">Price</th>
                <th scope="col">Category</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model?.Any() == true)
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.ProductID</td>
                        <td>@(item.Name ?? "N/A")</td>
                        <td>@item.Price.ToString("C", new System.Globalization.CultureInfo("vi-VN"))</td>
                        <td>@(item.Category ?? "N/A")</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ProductID" class="btn btn-sm btn-warning">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.ProductID" class="btn btn-sm btn-warning">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.ProductID" class="btn btn-sm btn-danger"
                               onclick="return confirm('Are you sure you want to delete @(item.Name ?? "this product")?');">Delete</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No products found</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        // Add any client-side validation or enhancements here if needed
    </script>
}
